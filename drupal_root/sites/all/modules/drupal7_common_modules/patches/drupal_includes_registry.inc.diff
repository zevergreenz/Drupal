--- a/includes/registry.inc	2013-04-04 05:29:52.000000000 +0800
+++ b/includes/registry.inc	2013-08-03 11:09:09.386457527 +0800
@@ -149,6 +149,34 @@
 }
 
 /**
+ * Returns the last key of the associative array (assuming numeric keys) which is not
+ * more than $key.
+ * 
+ * @param array $array
+ * @param integer $key
+ * @return integer The key which is not more than $key, or null if no such key
+ *       can be found
+ */
+function _registry_array_inverse_lower_bound(array &$array, $key) {
+  if (empty($array)) {
+    return null;
+  }
+
+  $keys = array_keys($array);
+  for ($i = 0, $j = count($keys); $i < $j; ++$i) {
+    if ($keys[$i] > $key) {
+      break;
+    }
+  }
+  if ($i === 0) {
+    //First key already greater than the given key.
+    return null;
+  } else {
+    return $keys[$i - 1];
+  }
+}
+
+/**
  * Parse a file and save its function and class listings.
  *
  * @param $filename
@@ -161,12 +189,22 @@
  *   (optional) Weight of the module.
  */
 function _registry_parse_file($filename, $contents, $module = '', $weight = 0) {
-  if (preg_match_all('/^\s*(?:abstract|final)?\s*(class|interface)\s+([a-zA-Z0-9_]+)/m', $contents, $matches)) {
+  $namespace_offsets = array();
+  $class_names = array();
+  if (preg_match_all('/^\s*namespace\s+([a-zA-Z0-9_\\\\]+)\s+([;{])/m', $contents, $namespaces, PREG_OFFSET_CAPTURE)) {
+    foreach ($namespaces[2] as $key => $match) {
+      $namespace_offsets[$match[1]] = $namespaces[1][$key][0];
+    }
+  }
+  if (preg_match_all('/^\s*(?:abstract|final)?\s*(class|interface)\s+([a-zA-Z0-9_]+)/m', $contents, $matches, PREG_OFFSET_CAPTURE)) {
     foreach ($matches[2] as $key => $name) {
+      $namespace_start = _registry_array_inverse_lower_bound($namespace_offsets, $name[1]);
+      $namespace = is_null($namespace_start) ? '' : $namespace_offsets[$namespace_start] . '\\';
+      $class_names[] = $namespace . $name[0];
       db_merge('registry')
         ->key(array(
-          'name' => $name,
-          'type' => $matches[1][$key],
+          'name' => $namespace . $name[0],
+          'type' => $matches[1][$key][0],
         ))
         ->fields(array(
           'filename' => $filename,
@@ -179,7 +217,7 @@
     // we just merged in.
     db_delete('registry')
       ->condition('filename', $filename)
-      ->condition('name', $matches[2], 'NOT IN')
+      ->condition('name', $class_names, 'NOT IN')
       ->execute();
   }
 }
